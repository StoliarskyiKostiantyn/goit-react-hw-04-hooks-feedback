{"version":3,"sources":["Components/Section/Section.js","Components/Statistics/Notification.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","Notification","Statistics","good","bad","neutral","total","percentage","FeedbackOptions","onClick","type","name","App","useState","setGood","setNeutral","setBad","toFixed","e","target","prevState","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAYeA,MAVf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,mCACE,gCACE,6BAAKD,IACJC,QCAMC,MAPf,WACE,OACE,mCACE,qDCAS,SAASC,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9D,OACE,mCACGD,EACC,qCACE,sCAAsBH,IAAd,QACR,qCAAoBC,IAAZ,OACR,yCAA4BC,IAApB,WACR,wCAAWC,KACX,qDAAwBC,QAG1B,cAAC,EAAD,MCbO,SAASC,EAAT,GAA0D,EAA/BL,KAA+B,EAAzBC,IAAyB,EAApBC,QAAqB,IAAZI,EAAW,EAAXA,QAC5D,OACE,qCACE,wBAAqBC,KAAK,SAASC,KAAM,OAAQF,QAASA,EAA1D,SACG,QADU,QAGb,wBAAoBC,KAAK,SAASC,KAAM,MAAOF,QAASA,EAAxD,SACG,OADU,OAGb,wBAAwBC,KAAK,SAASC,KAAM,UAAWF,QAASA,EAAhE,SACG,WADU,cCLJ,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAiBMV,EAAQH,EAAOC,EAAMC,EACrBE,GAAeJ,EAAOG,EAAS,KAAKW,UAE1C,OACE,qCACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAACS,EAAD,CACEL,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTI,QA1BY,SAACS,GAEnB,OADiBA,EAAEC,OAAXR,MAEN,IAAK,OACHG,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,aAgBF,cAAC,EAAD,CAASrB,MAAM,aAAf,SACE,cAACG,EAAD,CACEC,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOA,EACPe,mBAAoBd,SCxC9Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.34267e9b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>{title}</h2>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Section;\r\n","function Notification() {\r\n  return (\r\n    <>\r\n      <p>No feedback given</p>\r\n    </>\r\n  );\r\n}\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"./Notification\";\r\nexport default function Statistics({ good, bad, neutral, total, percentage }) {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <>\r\n          <p key={\"good\"}>Good:{good}</p>\r\n          <p key={\"bad\"}>Bad:{bad}</p>\r\n          <p key={\"neutral\"}>Neutral:{neutral}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive Percentage:{percentage}</p>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  percentage: PropTypes.number,\r\n  total: PropTypes.number,\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function FeedbackOptions({ good, bad, neutral, onClick }) {\r\n  return (\r\n    <>\r\n      <button key={\"good\"} type=\"button\" name={\"good\"} onClick={onClick}>\r\n        {\"good\"}\r\n      </button>\r\n      <button key={\"bad\"} type=\"button\" name={\"bad\"} onClick={onClick}>\r\n        {\"bad\"}\r\n      </button>\r\n      <button key={\"neutral\"} type=\"button\" name={\"neutral\"} onClick={onClick}>\r\n        {\"neutral\"}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClick: PropTypes.func,\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleClick = (e) => {\n    const { name } = e.target;\n    switch (name) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const total = good + bad + neutral;\n  const percentage = ((good / total) * 100).toFixed();\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          good={good}\n          bad={bad}\n          neutral={neutral}\n          onClick={handleClick}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          bad={bad}\n          neutral={neutral}\n          total={total}\n          positivePercentage={percentage}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}